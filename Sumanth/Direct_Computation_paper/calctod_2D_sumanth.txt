function [ti] = calctod_2D_sumanth(tij)

sz = size(tij);

A = tij .^ 2;
B = -2 * tij;

O = ones(1,sz(2));

n1 = 4;
s1 = size(tij, 1);

comb = combntns(1:s1,n1);
%disp(sz);
%disp(comb);
sz_comb = size(comb,1);
Ti_vec = zeros(sz_comb,s1);
tin = zeros(1,sz(1));

for i = 1:sz_comb
j = comb(i,:);
A_bar = zeros(n1,sz(2));
B_bar = zeros(n1,sz(2));
tii = zeros(1,s1);
for k = 1:n1
A_bar(k,:) = A(j(k),:);
B_bar(k,:) = B(j(k),:);
end

Y =[A_bar; B_bar];

%disp('Y :');
%disp(Y);

%rnk = rank(Y);
%disp('Rank of Y :');
%disp(rnk);

X = O * pinv(Y);

%disp('X :');
%disp(X);

tin(1) = X(5)/X(1);
tin(2) = X(6)/X(2);
tin(3) = X(7)/X(3);
tin(4) = X(8)/X(4);
%end
for l = 1:n1
%disp(j(l));
tii(:,j(l)) = tin(l);
end
Ti_vec(i,:) = tii;
end

%disp('Ti_vec :');
%disp(Ti_vec);

if sz_comb > 1
Ti_int = cast(Ti_vec,'uint8');

sz_Ti_int_col = size(Ti_int,2);
mode_group = zeros(1,sz_Ti_int_col);

for i = 1:sz_Ti_int_col
col = Ti_int(:,i);
mode_col = mode(col);
if mode_col == 0
    col_nz = nonzeros(col);
    mode_orig = mode(col_nz);
else
    mode_orig = mode_col;
end
mode_group(i) = mode_orig;
end

ti_mode = mode_group;
ti = double(ti_mode);
else
    ti = Ti_vec;
end

disp('ti :');
disp(ti);

end